---
apiVersion: v1
kind: Namespace
metadata:
  name: job-2

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
  name: redis
  namespace: job-2 
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: redis
    spec:
      containers:
      - image: redis 
        imagePullPolicy: IfNotPresent
        name: redis
        command: ["/bin/sh", "-c"]
        args: ["redis-server /etc/redis.conf --requirepass $(REDIS_PASS)"]
        resources: {}
        env:
        - name: REDIS_PASS
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: redis-pass
        ports:
        - containerPort: 6379
        readinessProbe:
          tcpSocket:
            port: 6379 
        livenessProbe:
          tcpSocket:          
            port: 6379 
          initialDelaySeconds: 10 
          periodSeconds: 5 
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 2
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: redis-conf
          mountPath: /etc/redis.conf
          subPath: etc/redis.conf
      volumes:
      - name: redis-conf
        configMap:
          defaultMode: 420
          name: redis-config
          items:
          - key: redis.conf
            path: etc/redis.conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

